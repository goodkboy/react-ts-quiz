{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timaz\\\\OneDrive\\\\Desktop\\\\react-ts-quiz\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Difficulty, fetchQuizQuestions } from \"./api\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport { GlobalStyle } from './styles/App.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  console.log(questions);\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) setScore(prev => prev + 1);\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer\n      };\n      setUserAnswers(prev => [...prev, answerObject]);\n    }\n  };\n  const nextQuestion = () => {\n    const nextQuestion = number + 1;\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQuestion);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: startTrivia,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 30\n      }, this) : null, loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(QuestionCard, {\n        questionNm: number + 1,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: questions[number].question,\n        answers: questions[number].answers,\n        userAnswer: userAnswers ? userAnswers[number] : undefined,\n        callback: checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), !loading && !gameOver && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: nextQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Difficulty","fetchQuizQuestions","QuestionCard","GlobalStyle","jsxDEV","_jsxDEV","TOTAL_QUESTIONS","App","_s","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","console","log","startTrivia","newQuestions","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","prev","answerObject","question","correctAnswer","nextQuestion","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","questionNm","totalQuestions","answers","userAnswer","undefined","callback","_c","$RefreshReg$"],"sources":["C:/Users/timaz/OneDrive/Desktop/react-ts-quiz/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {Difficulty, fetchQuizQuestions, QuestionState} from \"./api\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport { GlobalStyle } from './styles/App.styles';\n\nexport type AnswerObject = {\n    question: string,\n    answer: string,\n    correct: boolean,\n    correctAnswer: string\n}\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n    const [questions, setQuestions] = useState<QuestionState[]>([]);\n    const [number, setNumber] = useState(0);\n    const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n    const [score, setScore] = useState(0);\n    const [gameOver, setGameOver] = useState(true);\n\n    console.log(questions);\n\n    const startTrivia = async () => {\n        setLoading(true);\n        setGameOver(false);\n\n        const newQuestions = await fetchQuizQuestions(\n            TOTAL_QUESTIONS,\n            Difficulty.EASY\n        );\n\n        setQuestions(newQuestions);\n        setScore(0);\n        setUserAnswers([]);\n        setNumber(0);\n        setLoading(false);\n    }\n\n    const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n        if (!gameOver) {\n            const answer = e.currentTarget.value;\n\n            const correct = questions[number].correct_answer === answer;\n\n            if (correct) setScore(prev => prev + 1);\n\n            const answerObject = {\n                question: questions[number].question,\n                answer,\n                correct,\n                correctAnswer: questions[number].correct_answer\n            }\n            setUserAnswers(prev => [...prev, answerObject])\n        }\n    }\n\n    const nextQuestion = () => {\n        const nextQuestion = number + 1;\n\n        if (nextQuestion === TOTAL_QUESTIONS) {\n            setGameOver(true);\n        } else {\n            setNumber(nextQuestion)\n        }\n    }\n\n    return (\n        <GlobalStyle>\n            <div className=\"App\">\n                <h1>Quiz</h1>\n                {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n                    <button className=\"start\" onClick={startTrivia}>\n                        Start\n                    </button>\n                ) : null}\n\n                {!gameOver ? <p className=\"score\">Score: {score}</p> : null}\n\n                {loading && <p>Loading questions...</p>}\n\n                {!loading && !gameOver && (\n                    <QuestionCard\n                        questionNm={number + 1}\n                        totalQuestions={TOTAL_QUESTIONS}\n                        question={questions[number].question}\n                        answers={questions[number].answers}\n                        userAnswer={userAnswers ? userAnswers[number] : undefined}\n                        callback={checkAnswer}\n                    />\n                )}\n                {!loading && !gameOver && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? (\n                    <button className=\"next\" onClick={nextQuestion}>\n                        Next\n                    </button>\n                ) : null}\n\n            </div>\n        </GlobalStyle>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}